// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VAYTIEN.Models;

#nullable disable

namespace VAYTIEN.Migrations
{
    [DbContext(typeof(QlvayTienContext))]
    [Migration("20250605030217_InitModels")]
    partial class InitModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("VAYTIEN.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("VaiTro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("VAYTIEN.Models.ChiNhanhNganHang", b =>
                {
                    b.Property<int>("MaChiNhanh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaChiNhanh"));

                    b.Property<string>("DiaChi")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Sdt")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("SDT");

                    b.Property<string>("TenChiNhanh")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaChiNhanh");

                    b.ToTable("ChiNhanhNganHang", (string)null);
                });

            modelBuilder.Entity("VAYTIEN.Models.GiaoDich", b =>
                {
                    b.Property<int>("MaGiaoDich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaGiaoDich"));

                    b.Property<string>("LoaiGd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaTaiKhoan")
                        .HasColumnType("int");

                    b.Property<int?>("MaTaiKhoanNavigationMaTaiKhoan")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("NgayGd")
                        .HasColumnType("date");

                    b.Property<string>("NoiDungGd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SoTienGd")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaGiaoDich");

                    b.HasIndex("MaTaiKhoanNavigationMaTaiKhoan");

                    b.ToTable("GiaoDich", (string)null);
                });

            modelBuilder.Entity("VAYTIEN.Models.HopDongVay", b =>
                {
                    b.Property<int>("MaHopDong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaHopDong"));

                    b.Property<string>("HinhThucTra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("LaiSuat")
                        .HasColumnType("float");

                    b.Property<int?>("MaKh")
                        .HasColumnType("int");

                    b.Property<int?>("MaKhNavigationMaKh")
                        .HasColumnType("int");

                    b.Property<int?>("MaLoaiTienTe")
                        .HasColumnType("int");

                    b.Property<int?>("MaLoaiTienTeNavigationMaLoaiTienTe")
                        .HasColumnType("int");

                    b.Property<int?>("MaLoaiVay")
                        .HasColumnType("int");

                    b.Property<int?>("MaLoaiVayNavigationMaLoaiVay")
                        .HasColumnType("int");

                    b.Property<int?>("MaNv")
                        .HasColumnType("int");

                    b.Property<int?>("MaNvNavigationMaNv")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("NgayHetHan")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("NgayVay")
                        .HasColumnType("date");

                    b.Property<decimal?>("SoTienVay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TinhTrang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHopDong");

                    b.HasIndex("MaKhNavigationMaKh");

                    b.HasIndex("MaLoaiTienTeNavigationMaLoaiTienTe");

                    b.HasIndex("MaLoaiVayNavigationMaLoaiVay");

                    b.HasIndex("MaNvNavigationMaNv");

                    b.ToTable("HopDongVay", (string)null);
                });

            modelBuilder.Entity("VAYTIEN.Models.KhachHang", b =>
                {
                    b.Property<int>("MaKh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaKh"));

                    b.Property<string>("CmndCccd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("NgaySinh")
                        .HasColumnType("date");

                    b.Property<string>("NgheNghiep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrangHonNhan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKh");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("VAYTIEN.Models.LichTraNo", b =>
                {
                    b.Property<int>("MaLich")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLich"));

                    b.Property<int?>("KyHanThu")
                        .HasColumnType("int");

                    b.Property<int?>("MaHopDong")
                        .HasColumnType("int");

                    b.Property<int?>("MaHopDongNavigationMaHopDong")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("NgayTra")
                        .HasColumnType("date");

                    b.Property<decimal?>("SoTienPhaiTra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLich");

                    b.HasIndex("MaHopDongNavigationMaHopDong");

                    b.ToTable("LichTraNo", (string)null);
                });

            modelBuilder.Entity("VAYTIEN.Models.LoaiTienTe", b =>
                {
                    b.Property<int>("MaLoaiTienTe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiTienTe"));

                    b.Property<string>("TenLoaiTienTe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiTienTe");

                    b.ToTable("LoaiTienTe", (string)null);
                });

            modelBuilder.Entity("VAYTIEN.Models.LoaiVay", b =>
                {
                    b.Property<int>("MaLoaiVay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaLoaiVay"));

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KyHan")
                        .HasColumnType("int");

                    b.Property<double?>("LaiSuat")
                        .HasColumnType("float");

                    b.Property<string>("TenLoaiVay")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaLoaiVay");

                    b.ToTable("LoaiVay", (string)null);
                });

            modelBuilder.Entity("VAYTIEN.Models.NhanVien", b =>
                {
                    b.Property<int>("MaNv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaNv"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaChiNhanh")
                        .HasColumnType("int");

                    b.Property<int?>("MaChiNhanhNavigationMaChiNhanh")
                        .HasColumnType("int");

                    b.Property<string>("MatKhau")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sdt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaiTro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNv");

                    b.HasIndex("MaChiNhanhNavigationMaChiNhanh");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("VAYTIEN.Models.TaiKhoanNganHang", b =>
                {
                    b.Property<int>("MaTaiKhoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTaiKhoan"));

                    b.Property<string>("LoaiTaiKhoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaKh")
                        .HasColumnType("int");

                    b.Property<int?>("MaKhNavigationMaKh")
                        .HasColumnType("int");

                    b.Property<decimal?>("SoDu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SoTaiKhoan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTaiKhoan");

                    b.HasIndex("MaKhNavigationMaKh");

                    b.ToTable("TaiKhoanNganHang", (string)null);
                });

            modelBuilder.Entity("VAYTIEN.Models.TaiSanTheChap", b =>
                {
                    b.Property<int>("MaTs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaTs"));

                    b.Property<decimal?>("GiaTri")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("MaHopDong")
                        .HasColumnType("int");

                    b.Property<int?>("MaHopDongNavigationMaHopDong")
                        .HasColumnType("int");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTaiSan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrang")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaTs");

                    b.HasIndex("MaHopDongNavigationMaHopDong");

                    b.ToTable("TaiSanTheChap", (string)null);
                });

            modelBuilder.Entity("VAYTIEN.Models.ThanhToanLichTra", b =>
                {
                    b.Property<int>("MaThanhToan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaThanhToan"));

                    b.Property<string>("HinhThucThanhToan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaLich")
                        .HasColumnType("int");

                    b.Property<int?>("MaLichNavigationMaLich")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("NgayThanhToan")
                        .HasColumnType("date");

                    b.Property<string>("SoTaiKhoanGd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("SoTienThanhToan")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MaThanhToan");

                    b.HasIndex("MaLichNavigationMaLich");

                    b.ToTable("ThanhToanLichTra", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("VAYTIEN.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("VAYTIEN.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VAYTIEN.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("VAYTIEN.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VAYTIEN.Models.GiaoDich", b =>
                {
                    b.HasOne("VAYTIEN.Models.TaiKhoanNganHang", "MaTaiKhoanNavigation")
                        .WithMany("GiaoDiches")
                        .HasForeignKey("MaTaiKhoanNavigationMaTaiKhoan");

                    b.Navigation("MaTaiKhoanNavigation");
                });

            modelBuilder.Entity("VAYTIEN.Models.HopDongVay", b =>
                {
                    b.HasOne("VAYTIEN.Models.KhachHang", "MaKhNavigation")
                        .WithMany("HopDongVays")
                        .HasForeignKey("MaKhNavigationMaKh");

                    b.HasOne("VAYTIEN.Models.LoaiTienTe", "MaLoaiTienTeNavigation")
                        .WithMany("HopDongVays")
                        .HasForeignKey("MaLoaiTienTeNavigationMaLoaiTienTe");

                    b.HasOne("VAYTIEN.Models.LoaiVay", "MaLoaiVayNavigation")
                        .WithMany("HopDongVays")
                        .HasForeignKey("MaLoaiVayNavigationMaLoaiVay");

                    b.HasOne("VAYTIEN.Models.NhanVien", "MaNvNavigation")
                        .WithMany("HopDongVays")
                        .HasForeignKey("MaNvNavigationMaNv");

                    b.Navigation("MaKhNavigation");

                    b.Navigation("MaLoaiTienTeNavigation");

                    b.Navigation("MaLoaiVayNavigation");

                    b.Navigation("MaNvNavigation");
                });

            modelBuilder.Entity("VAYTIEN.Models.LichTraNo", b =>
                {
                    b.HasOne("VAYTIEN.Models.HopDongVay", "MaHopDongNavigation")
                        .WithMany("LichTraNos")
                        .HasForeignKey("MaHopDongNavigationMaHopDong");

                    b.Navigation("MaHopDongNavigation");
                });

            modelBuilder.Entity("VAYTIEN.Models.NhanVien", b =>
                {
                    b.HasOne("VAYTIEN.Models.ChiNhanhNganHang", "MaChiNhanhNavigation")
                        .WithMany("NhanViens")
                        .HasForeignKey("MaChiNhanhNavigationMaChiNhanh");

                    b.Navigation("MaChiNhanhNavigation");
                });

            modelBuilder.Entity("VAYTIEN.Models.TaiKhoanNganHang", b =>
                {
                    b.HasOne("VAYTIEN.Models.KhachHang", "MaKhNavigation")
                        .WithMany("TaiKhoanNganHangs")
                        .HasForeignKey("MaKhNavigationMaKh");

                    b.Navigation("MaKhNavigation");
                });

            modelBuilder.Entity("VAYTIEN.Models.TaiSanTheChap", b =>
                {
                    b.HasOne("VAYTIEN.Models.HopDongVay", "MaHopDongNavigation")
                        .WithMany("TaiSanTheChaps")
                        .HasForeignKey("MaHopDongNavigationMaHopDong");

                    b.Navigation("MaHopDongNavigation");
                });

            modelBuilder.Entity("VAYTIEN.Models.ThanhToanLichTra", b =>
                {
                    b.HasOne("VAYTIEN.Models.LichTraNo", "MaLichNavigation")
                        .WithMany("ThanhToanLichTras")
                        .HasForeignKey("MaLichNavigationMaLich");

                    b.Navigation("MaLichNavigation");
                });

            modelBuilder.Entity("VAYTIEN.Models.ChiNhanhNganHang", b =>
                {
                    b.Navigation("NhanViens");
                });

            modelBuilder.Entity("VAYTIEN.Models.HopDongVay", b =>
                {
                    b.Navigation("LichTraNos");

                    b.Navigation("TaiSanTheChaps");
                });

            modelBuilder.Entity("VAYTIEN.Models.KhachHang", b =>
                {
                    b.Navigation("HopDongVays");

                    b.Navigation("TaiKhoanNganHangs");
                });

            modelBuilder.Entity("VAYTIEN.Models.LichTraNo", b =>
                {
                    b.Navigation("ThanhToanLichTras");
                });

            modelBuilder.Entity("VAYTIEN.Models.LoaiTienTe", b =>
                {
                    b.Navigation("HopDongVays");
                });

            modelBuilder.Entity("VAYTIEN.Models.LoaiVay", b =>
                {
                    b.Navigation("HopDongVays");
                });

            modelBuilder.Entity("VAYTIEN.Models.NhanVien", b =>
                {
                    b.Navigation("HopDongVays");
                });

            modelBuilder.Entity("VAYTIEN.Models.TaiKhoanNganHang", b =>
                {
                    b.Navigation("GiaoDiches");
                });
#pragma warning restore 612, 618
        }
    }
}
